openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080/api
  description: Generated server url
tags:
- name: Books
  description: API to manage book information
paths:
  /books:
    get:
      tags:
      - Books
      summary: Retrieve information on all registered books
      operationId: getAll
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        "404":
          description: Not found
    post:
      tags:
      - Books
      summary: Register your book information
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "201":
          description: Registered book information.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "400":
          description: Incomplete information to be registered
  /books/{id}:
    get:
      tags:
      - Books
      summary: Obtain information on the book with the specified ID
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: Not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
          description: "Book ID, automatically generated by the system."
          readOnly: true
        title:
          type: string
          description: Book title. Required for registration.
          example: book title
        url:
          type: string
          description: "URL of the book, required for registration"
          example: https://example.com/book/booktitle
        tags:
          type: array
          description: Book Tag List. Set words that describe the book's genre and
            content.
          example:
          - fight
          - love
          items:
            type: string
            description: Book Tag List. Set words that describe the book's genre and
              content.
            example: "[\"fight\",\"love\"]"
        authors:
          type: array
          description: "List of book authors. Set up the name of the original author,\
            \ artist, etc."
          example:
          - akira toriyama
          items:
            type: string
            description: "List of book authors. Set up the name of the original author,\
              \ artist, etc."
            example: "[\"akira toriyama\"]"
        episodes:
          type: array
          description: "List of book episodes. Set the episode number, episode title,\
            \ and episode URL."
          readOnly: true
          items:
            $ref: '#/components/schemas/Episode'
    Episode:
      type: object
      properties:
        episodeNumber:
          minimum: 0
          type: integer
          description: Episode Number
          format: int32
        title:
          type: string
          description: Episode Title
        url:
          type: string
          description: URL of the episode
        atUpdate:
          type: string
          description: Time the episode was updated
          format: date-time
          example: 2023-10-22T15:01:00+09:00
      description: "List of book episodes. Set the episode number, episode title,\
        \ and episode URL."
      readOnly: true
